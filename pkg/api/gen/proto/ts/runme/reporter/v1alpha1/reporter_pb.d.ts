/* eslint-disable */
// @generated by protobuf-ts 2.9.5 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "runme/reporter/v1alpha1/reporter.proto" (package "runme.reporter.v1alpha1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { MessageType } from "@protobuf-ts/runtime";
import { Notebook } from "../../parser/v1/parser_pb";
/**
 * @generated from protobuf message runme.reporter.v1alpha1.TransformRequest
 */
export interface TransformRequest {
    /**
     * @generated from protobuf field: runme.parser.v1.Notebook notebook = 1;
     */
    notebook?: Notebook;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.TransformRequestExtension extension = 2;
     */
    extension?: TransformRequestExtension;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.TransformRequestExtension
 */
export interface TransformRequestExtension {
    /**
     * @generated from protobuf field: optional bool auto_save = 2;
     */
    autoSave?: boolean;
    /**
     * @generated from protobuf field: optional string repository = 3;
     */
    repository?: string;
    /**
     * @generated from protobuf field: optional string branch = 4;
     */
    branch?: string;
    /**
     * @generated from protobuf field: optional string commit = 5;
     */
    commit?: string;
    /**
     * @generated from protobuf field: optional string file_path = 6;
     */
    filePath?: string;
    /**
     * @generated from protobuf field: optional bytes file_content = 7;
     */
    fileContent?: Uint8Array;
    /**
     * @generated from protobuf field: optional bytes plain_output = 8;
     */
    plainOutput?: Uint8Array;
    /**
     * @generated from protobuf field: optional bytes masked_output = 9;
     */
    maskedOutput?: Uint8Array;
    /**
     * @generated from protobuf field: optional string mac_address = 10;
     */
    macAddress?: string;
    /**
     * @generated from protobuf field: optional string hostname = 11;
     */
    hostname?: string;
    /**
     * @generated from protobuf field: optional string platform = 12;
     */
    platform?: string;
    /**
     * @generated from protobuf field: optional string release = 13;
     */
    release?: string;
    /**
     * @generated from protobuf field: optional string arch = 14;
     */
    arch?: string;
    /**
     * @generated from protobuf field: optional string vendor = 15;
     */
    vendor?: string;
    /**
     * @generated from protobuf field: optional string shell = 16;
     */
    shell?: string;
    /**
     * @generated from protobuf field: optional string vs_app_host = 17;
     */
    vsAppHost?: string;
    /**
     * @generated from protobuf field: optional string vs_app_name = 18;
     */
    vsAppName?: string;
    /**
     * @generated from protobuf field: optional string vs_app_session_id = 19;
     */
    vsAppSessionId?: string;
    /**
     * @generated from protobuf field: optional string vs_machine_id = 20;
     */
    vsMachineId?: string;
    /**
     * @generated from protobuf field: map<string, string> vs_metadata = 21;
     */
    vsMetadata: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.TransformResponse
 */
export interface TransformResponse {
    /**
     * @generated from protobuf field: runme.parser.v1.Notebook notebook = 1;
     */
    notebook?: Notebook;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.ReporterExtension extension = 2;
     */
    extension?: ReporterExtension;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.ReporterExtension
 */
export interface ReporterExtension {
    /**
     * @generated from protobuf field: bool auto_save = 1;
     */
    autoSave: boolean;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.ReporterGit git = 2;
     */
    git?: ReporterGit;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.ReporterFile file = 3;
     */
    file?: ReporterFile;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.ReporterSession session = 4;
     */
    session?: ReporterSession;
    /**
     * @generated from protobuf field: runme.reporter.v1alpha1.ReporterDevice device = 5;
     */
    device?: ReporterDevice;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.ReporterGit
 */
export interface ReporterGit {
    /**
     * @generated from protobuf field: string repository = 1;
     */
    repository: string;
    /**
     * @generated from protobuf field: string branch = 2;
     */
    branch: string;
    /**
     * @generated from protobuf field: string commit = 3;
     */
    commit: string;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.ReporterSession
 */
export interface ReporterSession {
    /**
     * @generated from protobuf field: bytes plain_output = 1;
     */
    plainOutput: Uint8Array;
    /**
     * @generated from protobuf field: bytes masked_output = 2;
     */
    maskedOutput: Uint8Array;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.ReporterFile
 */
export interface ReporterFile {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: bytes content = 2;
     */
    content: Uint8Array;
}
/**
 * @generated from protobuf message runme.reporter.v1alpha1.ReporterDevice
 */
export interface ReporterDevice {
    /**
     * @generated from protobuf field: string mac_address = 1;
     */
    macAddress: string;
    /**
     * @generated from protobuf field: string hostname = 2;
     */
    hostname: string;
    /**
     * @generated from protobuf field: string platform = 3;
     */
    platform: string;
    /**
     * @generated from protobuf field: string release = 4;
     */
    release: string;
    /**
     * @generated from protobuf field: string arch = 5;
     */
    arch: string;
    /**
     * @generated from protobuf field: string vendor = 6;
     */
    vendor: string;
    /**
     * @generated from protobuf field: string shell = 7;
     */
    shell: string;
    /**
     * @generated from protobuf field: string vs_app_host = 8;
     */
    vsAppHost: string;
    /**
     * @generated from protobuf field: string vs_app_name = 9;
     */
    vsAppName: string;
    /**
     * @generated from protobuf field: string vs_app_session_id = 10;
     */
    vsAppSessionId: string;
    /**
     * @generated from protobuf field: string vs_machine_id = 11;
     */
    vsMachineId: string;
    /**
     * @generated from protobuf field: map<string, string> vs_metadata = 12;
     */
    vsMetadata: {
        [key: string]: string;
    };
}
declare class TransformRequest$Type extends MessageType<TransformRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.TransformRequest
 */
export declare const TransformRequest: TransformRequest$Type;
declare class TransformRequestExtension$Type extends MessageType<TransformRequestExtension> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.TransformRequestExtension
 */
export declare const TransformRequestExtension: TransformRequestExtension$Type;
declare class TransformResponse$Type extends MessageType<TransformResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.TransformResponse
 */
export declare const TransformResponse: TransformResponse$Type;
declare class ReporterExtension$Type extends MessageType<ReporterExtension> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.ReporterExtension
 */
export declare const ReporterExtension: ReporterExtension$Type;
declare class ReporterGit$Type extends MessageType<ReporterGit> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.ReporterGit
 */
export declare const ReporterGit: ReporterGit$Type;
declare class ReporterSession$Type extends MessageType<ReporterSession> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.ReporterSession
 */
export declare const ReporterSession: ReporterSession$Type;
declare class ReporterFile$Type extends MessageType<ReporterFile> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.ReporterFile
 */
export declare const ReporterFile: ReporterFile$Type;
declare class ReporterDevice$Type extends MessageType<ReporterDevice> {
    constructor();
}
/**
 * @generated MessageType for protobuf message runme.reporter.v1alpha1.ReporterDevice
 */
export declare const ReporterDevice: ReporterDevice$Type;
/**
 * @generated ServiceType for protobuf service runme.reporter.v1alpha1.ReporterService
 */
export declare const ReporterService: any;
export {};

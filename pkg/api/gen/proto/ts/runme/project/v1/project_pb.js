/* eslint-disable */
// @generated by protobuf-ts 2.9.5 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "runme/project/v1/project.proto" (package "runme.project.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
/* eslint-disable */
// @generated by protobuf-ts 2.9.5 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "runme/project/v1/project.proto" (package "runme.project.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { RunmeIdentity } from "../../parser/v1/parser_pb";
/**
 * @generated from protobuf enum runme.project.v1.LoadEventType
 */
export var LoadEventType;
(function (LoadEventType) {
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_UNSPECIFIED = 0;
     */
    LoadEventType[LoadEventType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_STARTED_WALK = 1;
     */
    LoadEventType[LoadEventType["STARTED_WALK"] = 1] = "STARTED_WALK";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_FOUND_DIR = 2;
     */
    LoadEventType[LoadEventType["FOUND_DIR"] = 2] = "FOUND_DIR";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_FOUND_FILE = 3;
     */
    LoadEventType[LoadEventType["FOUND_FILE"] = 3] = "FOUND_FILE";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_FINISHED_WALK = 4;
     */
    LoadEventType[LoadEventType["FINISHED_WALK"] = 4] = "FINISHED_WALK";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_STARTED_PARSING_DOC = 5;
     */
    LoadEventType[LoadEventType["STARTED_PARSING_DOC"] = 5] = "STARTED_PARSING_DOC";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_FINISHED_PARSING_DOC = 6;
     */
    LoadEventType[LoadEventType["FINISHED_PARSING_DOC"] = 6] = "FINISHED_PARSING_DOC";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_FOUND_TASK = 7;
     */
    LoadEventType[LoadEventType["FOUND_TASK"] = 7] = "FOUND_TASK";
    /**
     * @generated from protobuf enum value: LOAD_EVENT_TYPE_ERROR = 8;
     */
    LoadEventType[LoadEventType["ERROR"] = 8] = "ERROR";
})(LoadEventType || (LoadEventType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class DirectoryProjectOptions$Type extends MessageType {
    constructor() {
        super("runme.project.v1.DirectoryProjectOptions", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "skip_gitignore", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "ignore_file_patterns", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "skip_repo_lookup_upward", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.DirectoryProjectOptions
 */
export const DirectoryProjectOptions = new DirectoryProjectOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileProjectOptions$Type extends MessageType {
    constructor() {
        super("runme.project.v1.FileProjectOptions", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.FileProjectOptions
 */
export const FileProjectOptions = new FileProjectOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadRequest$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadRequest", [
            { no: 1, name: "directory", kind: "message", oneof: "kind", T: () => DirectoryProjectOptions },
            { no: 2, name: "file", kind: "message", oneof: "kind", T: () => FileProjectOptions },
            { no: 3, name: "identity", kind: "enum", T: () => ["runme.parser.v1.RunmeIdentity", RunmeIdentity, "RUNME_IDENTITY_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadRequest
 */
export const LoadRequest = new LoadRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventStartedWalk$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventStartedWalk", []);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventStartedWalk
 */
export const LoadEventStartedWalk = new LoadEventStartedWalk$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventFoundDir$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventFoundDir", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventFoundDir
 */
export const LoadEventFoundDir = new LoadEventFoundDir$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventFoundFile$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventFoundFile", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventFoundFile
 */
export const LoadEventFoundFile = new LoadEventFoundFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventFinishedWalk$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventFinishedWalk", []);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventFinishedWalk
 */
export const LoadEventFinishedWalk = new LoadEventFinishedWalk$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventStartedParsingDoc$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventStartedParsingDoc", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventStartedParsingDoc
 */
export const LoadEventStartedParsingDoc = new LoadEventStartedParsingDoc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventFinishedParsingDoc$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventFinishedParsingDoc", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventFinishedParsingDoc
 */
export const LoadEventFinishedParsingDoc = new LoadEventFinishedParsingDoc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventFoundTask$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventFoundTask", [
            { no: 1, name: "document_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_name_generated", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventFoundTask
 */
export const LoadEventFoundTask = new LoadEventFoundTask$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadEventError$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadEventError", [
            { no: 1, name: "error_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadEventError
 */
export const LoadEventError = new LoadEventError$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadResponse$Type extends MessageType {
    constructor() {
        super("runme.project.v1.LoadResponse", [
            { no: 1, name: "type", kind: "enum", T: () => ["runme.project.v1.LoadEventType", LoadEventType, "LOAD_EVENT_TYPE_"] },
            { no: 2, name: "started_walk", kind: "message", oneof: "data", T: () => LoadEventStartedWalk },
            { no: 3, name: "found_dir", kind: "message", oneof: "data", T: () => LoadEventFoundDir },
            { no: 4, name: "found_file", kind: "message", oneof: "data", T: () => LoadEventFoundFile },
            { no: 5, name: "finished_walk", kind: "message", oneof: "data", T: () => LoadEventFinishedWalk },
            { no: 6, name: "started_parsing_doc", kind: "message", oneof: "data", T: () => LoadEventStartedParsingDoc },
            { no: 7, name: "finished_parsing_doc", kind: "message", oneof: "data", T: () => LoadEventFinishedParsingDoc },
            { no: 8, name: "found_task", kind: "message", oneof: "data", T: () => LoadEventFoundTask },
            { no: 9, name: "error", kind: "message", oneof: "data", T: () => LoadEventError }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message runme.project.v1.LoadResponse
 */
export const LoadResponse = new LoadResponse$Type();
/**
 * @generated ServiceType for protobuf service runme.project.v1.ProjectService
 */
export const ProjectService = new ServiceType("runme.project.v1.ProjectService", [
    { name: "Load", serverStreaming: true, options: {}, I: LoadRequest, O: LoadResponse }
]);
